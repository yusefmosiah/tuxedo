# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Verify Node.js version
RUN node --version && npm --version

# Install comprehensive build dependencies for native modules
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    linux-headers \
    udev \
    libusb-dev \
    eudev-dev \
    libusb \
    musl-dev \
    util-linux-dev

# Copy package files
COPY package*.json ./

# Clear npm cache to avoid stale lockfile issues
RUN npm cache clean --force

# Install all dependencies (including dev dependencies for build)
# Use --no-optional to skip optional native modules if possible
ENV PYTHON=/usr/bin/python3
RUN npm ci --include=dev --no-audit --no-fund

# Copy source code
COPY . .

# Build the application (skip TypeScript checking)
RUN npx vite build --mode production

# Production stage - use a simple web server
FROM node:20-alpine

WORKDIR /app

# Copy built files only
COPY --from=builder /app/dist ./dist

# Install serve (this doesn't need build tools)
RUN npm install -g serve --no-audit --no-fund

# Expose port
EXPOSE 8080

# Health check compatible with Render
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1

# Serve the application
CMD ["serve", "-s", "dist", "-l", "8080"]
